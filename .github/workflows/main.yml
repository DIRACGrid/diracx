name: Basic Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: prefix-dev/setup-pixi@v0.8.3
        with:
          environments: shellcheck
      - name: Run shellcheck
        run: pixi run shellcheck

  unittest:
    name: Unit test - ${{ matrix.package }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package:
          - diracx-core
          - diracx-db
          - diracx-logic
          - diracx-routers
          - diracx-client
          - diracx-api
          - diracx-cli
          - gubbins-core
          - gubbins-db
          - gubbins-logic
          - gubbins-routers
          - gubbins-client
          - gubbins-api
          - gubbins-cli
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: prefix-dev/setup-pixi@v0.8.3
        with:
          environments: ${{ matrix.package }}
      - name: Run pytest
        env:
          EXTRA_PYTEST_ARGS: --cov-report=xml:coverage.xml --junitxml=report.xml
        run: pixi run pytest-${{ matrix.package }}
      - name: Upload coverage report
        uses: codecov/codecov-action@v5.4.2

  pytest-integration:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: prefix-dev/setup-pixi@v0.8.3
        with:
          environments: default
      - name: Start demo
        run: |
          git clone https://github.com/DIRACGrid/diracx-charts.git ../diracx-charts
          ../diracx-charts/run_demo.sh --enable-open-telemetry --enable-coverage --exit-when-done --set-value developer.autoReload=false --ci-values ../diracx-charts/demo/ci_values.yaml $PWD
      - name: Debugging information
        run: |
          DIRACX_DEMO_DIR=$PWD/../diracx-charts/.demo
          export KUBECONFIG=${DIRACX_DEMO_DIR}/kube.conf
          export PATH=${DIRACX_DEMO_DIR}:$PATH
          kubectl get pods
          for pod_name in $(kubectl get pods -o json | jq -r '.items[] | .metadata.name' | grep -vE '(dex|minio|mysql|rabbitmq|opensearch)'); do
            echo "${pod_name}"
            kubectl describe pod/"${pod_name}" || true
            for container_name in $(kubectl get pods $pod_name -o jsonpath='{.spec.initContainers[*].name} {.spec.containers[*].name}'); do
              echo $pod_name $container_name
              kubectl logs "${pod_name}" -c "${container_name}" || true
            done
          done
          if [ ! -f "${DIRACX_DEMO_DIR}/.success" ]; then
            cat "${DIRACX_DEMO_DIR}/.failed"
            exit 1
          fi
      - name: Run pytest
        run: |
          pixi run pytest-diracx --demo-dir=../diracx-charts/ --cov-report=xml:coverage-pytest.xml --junitxml=report.xml
      - name: Collect demo coverage
        run: |
          pixi run -e default python -m diracx.testing coverage collect-demo --demo-dir=../diracx-charts/.demo
      - name: Upload coverage report
        uses: codecov/codecov-action@v5.4.2
        with:
          files: ./coverage-pytest.xml,./coverage-demo.xml

  client-generation:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package: [diracx, gubbins]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: prefix-dev/setup-pixi@v0.8.3
        with:
          environments: ${{ matrix.package }}-generate-client
      - name: Run autorest
        run: pixi run -e ${{ matrix.package }}-generate-client generate-client
