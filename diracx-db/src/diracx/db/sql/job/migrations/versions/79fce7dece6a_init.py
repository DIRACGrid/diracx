"""init

Revision ID: 79fce7dece6a
Revises:
Create Date: 2025-06-20 16:31:53.704617

"""

from __future__ import annotations

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

import diracx

# revision identifiers, used by Alembic.
revision: str = "79fce7dece6a"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "JobJDLs",
        sa.Column("JobID", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("JDL", sa.Text(), nullable=False),
        sa.Column("JobRequirements", sa.Text(), nullable=False),
        sa.Column("OriginalJDL", sa.Text(), nullable=False),
        sa.PrimaryKeyConstraint("JobID"),
    )
    op.create_table(
        "JobsHistorySummary",
        sa.Column("ID", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("Status", sa.String(length=32), nullable=False),
        sa.Column("Site", sa.String(length=100), nullable=False),
        sa.Column("Owner", sa.String(length=64), nullable=False),
        sa.Column("OwnerGroup", sa.String(length=128), nullable=False),
        sa.Column("VO", sa.String(length=64), nullable=False),
        sa.Column("JobGroup", sa.String(length=32), nullable=False),
        sa.Column("JobType", sa.String(length=32), nullable=False),
        sa.Column("ApplicationStatus", sa.String(length=255), nullable=False),
        sa.Column("MinorStatus", sa.String(length=128), nullable=False),
        sa.Column("JobCount", sa.Integer(), nullable=False),
        sa.Column("RescheduleSum", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("ID"),
        sa.UniqueConstraint(
            "Status",
            "Site",
            "Owner",
            "OwnerGroup",
            "VO",
            "JobGroup",
            "JobType",
            "ApplicationStatus",
            "MinorStatus",
            name="uq_summary",
        ),
    )
    op.create_table(
        "Jobs",
        sa.Column("JobID", sa.Integer(), nullable=False),
        sa.Column("JobType", sa.String(length=32), nullable=False),
        sa.Column("JobGroup", sa.String(length=32), nullable=False),
        sa.Column("Site", sa.String(length=100), nullable=False),
        sa.Column("JobName", sa.String(length=128), nullable=False),
        sa.Column("Owner", sa.String(length=64), nullable=False),
        sa.Column("OwnerGroup", sa.String(length=128), nullable=False),
        sa.Column("VO", sa.String(length=64), nullable=False),
        sa.Column("SubmissionTime", sa.DateTime(), nullable=True),
        sa.Column("RescheduleTime", sa.DateTime(), nullable=True),
        sa.Column("LastUpdateTime", sa.DateTime(), nullable=True),
        sa.Column("StartExecTime", sa.DateTime(), nullable=True),
        sa.Column("HeartBeatTime", sa.DateTime(), nullable=True),
        sa.Column("EndExecTime", sa.DateTime(), nullable=True),
        sa.Column("Status", sa.String(length=32), nullable=False),
        sa.Column("MinorStatus", sa.String(length=128), nullable=False),
        sa.Column("ApplicationStatus", sa.String(length=255), nullable=False),
        sa.Column("UserPriority", sa.Integer(), nullable=False),
        sa.Column("RescheduleCounter", sa.Integer(), nullable=False),
        sa.Column(
            "VerifiedFlag", diracx.db.sql.utils.types.EnumBackedBool(), nullable=False
        ),
        sa.Column(
            "AccountedFlag",
            diracx.db.sql.job.schema.AccountedFlagEnum(),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["JobID"], ["JobJDLs.JobID"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("JobID"),
    )
    op.create_index("ApplicationStatus", "Jobs", ["ApplicationStatus"], unique=False)
    op.create_index("JobGroup", "Jobs", ["JobGroup"], unique=False)
    op.create_index("JobType", "Jobs", ["JobType"], unique=False)
    op.create_index("LastUpdateTime", "Jobs", ["LastUpdateTime"], unique=False)
    op.create_index("MinorStatus", "Jobs", ["MinorStatus"], unique=False)
    op.create_index("Owner", "Jobs", ["Owner"], unique=False)
    op.create_index("OwnerGroup", "Jobs", ["OwnerGroup"], unique=False)
    op.create_index("Site", "Jobs", ["Site"], unique=False)
    op.create_index("Status", "Jobs", ["Status"], unique=False)
    op.create_index("StatusSite", "Jobs", ["Status", "Site"], unique=False)
    op.create_table(
        "AtticJobParameters",
        sa.Column("JobID", sa.Integer(), nullable=False),
        sa.Column("Name", sa.String(length=100), nullable=False),
        sa.Column("Value", sa.Text(), nullable=False),
        sa.Column("RescheduleCycle", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["JobID"], ["Jobs.JobID"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("JobID", "Name"),
    )
    op.create_table(
        "HeartBeatLoggingInfo",
        sa.Column("JobID", sa.Integer(), nullable=False),
        sa.Column("Name", sa.String(length=100), nullable=False),
        sa.Column("Value", sa.Text(), nullable=False),
        sa.Column("HeartBeatTime", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(["JobID"], ["Jobs.JobID"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("JobID", "Name", "HeartBeatTime"),
    )
    op.create_table(
        "InputData",
        sa.Column("JobID", sa.Integer(), nullable=False),
        sa.Column("LFN", sa.String(length=255), nullable=False),
        sa.Column("Status", sa.String(length=32), nullable=False),
        sa.ForeignKeyConstraint(["JobID"], ["Jobs.JobID"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("JobID", "LFN"),
    )
    op.create_table(
        "JobCommands",
        sa.Column("JobID", sa.Integer(), nullable=False),
        sa.Column("Command", sa.String(length=100), nullable=False),
        sa.Column("Arguments", sa.String(length=100), nullable=False),
        sa.Column("Status", sa.String(length=32), nullable=False),
        sa.Column("ReceptionTime", sa.DateTime(), nullable=False),
        sa.Column("ExecutionTime", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(["JobID"], ["Jobs.JobID"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("JobID", "ReceptionTime"),
    )
    op.create_table(
        "JobParameters",
        sa.Column("JobID", sa.Integer(), nullable=False),
        sa.Column("Name", sa.String(length=100), nullable=False),
        sa.Column("Value", sa.Text(), nullable=False),
        sa.ForeignKeyConstraint(["JobID"], ["Jobs.JobID"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("JobID", "Name"),
    )
    op.create_table(
        "OptimizerParameters",
        sa.Column("JobID", sa.Integer(), nullable=False),
        sa.Column("Name", sa.String(length=100), nullable=False),
        sa.Column("Value", sa.Text(), nullable=False),
        sa.ForeignKeyConstraint(["JobID"], ["Jobs.JobID"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("JobID", "Name"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("OptimizerParameters")
    op.drop_table("JobParameters")
    op.drop_table("JobCommands")
    op.drop_table("InputData")
    op.drop_table("HeartBeatLoggingInfo")
    op.drop_table("AtticJobParameters")
    op.drop_index("StatusSite", table_name="Jobs")
    op.drop_index("Status", table_name="Jobs")
    op.drop_index("Site", table_name="Jobs")
    op.drop_index("OwnerGroup", table_name="Jobs")
    op.drop_index("Owner", table_name="Jobs")
    op.drop_index("MinorStatus", table_name="Jobs")
    op.drop_index("LastUpdateTime", table_name="Jobs")
    op.drop_index("JobType", table_name="Jobs")
    op.drop_index("JobGroup", table_name="Jobs")
    op.drop_index("ApplicationStatus", table_name="Jobs")
    op.drop_table("Jobs")
    op.drop_table("JobsHistorySummary")
    op.drop_table("JobJDLs")
    # ### end Alembic commands ###
